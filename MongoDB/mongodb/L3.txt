
1.-----------------------------------------------------
In-memory
- Основная идея: вся СУБД хранит 
в опервтивной памяти

- Необязательно только ключ-значение,
есть SingleStore(memSQL) - реляционная СУБД отностися к Not only SQL или NewSQL

- Кластер может упереться в скорость
обмена данными по сети
2.-----------------------------------------------------
Колочночный 
- Основная идея: убрать из РСУБД
все, что мешает легкому маштабированию(транзакции, join)
- Предполагает работу на кластере
- В CAP-теореме не сочетается 
доступность(получаем результат сразу после изменения) 
и консистентность(на каждом из узлов одни и те же данные)
eventual consistency(Согласованность в конечном счёте)
одна из моделей согласованности, используемая в распределённых системах 
для достижения высокой доступности, в рамках которой гарантируется, 
что в отсутствии изменений данных, через какой-то промежуток времени после последнего обновления («в конечном счёте») 
все запросы будут возвращать последнее обновлённое значение.
Пример: Cassandra, HBase(Hudub)

3.-----------------------------------------------------------------------------------------------------------------------
ОБлачные СУБД
- Релизованы облачными провайдерами
AWS, GCP, Azure
- Как правило, администрируеется облоком, 
не нужно настраивать автомаштабирование
- Каждая со своими особенностями,
но с базовым классом
Пример: AWS DynamoDB,
GCP Spanner, Azure CosmosDB

