Недостатки РСУБД:
1. Дорогивизна и невозможность маштобирования
2. Небходимость описания схемы хранения данных
3. Ограниченность быстроедийствия архитектурой СУБД и концепциями СУБД

NoSQL
1. Другие способы проектирования БД
	* Key-value - RADIS
	* Документоориетирования - MongoDB
	* Графовые
2. Not only SQL
	* Колоночные СУБД
	* Постреляционные - это сочентание документооринтированных СУБД и реляцинными СУБД
3. New SQL - сочетает все возможности реляцинных СУБД + либо маштабироваемость, транзакции или что-то еще


SQL vs NoSQL

1) Структура данных : SQL-Схема хранения данных, миграция таблиц. NoSQL - Без схемы
2) SQL для запросов: SQL- Да. NoSQL- Нет
3) Транзакция: SQL- ACID. NoSQL- CAP - теорема

Теорема Брюера
CAP (Consistency, Availability, Partition tolerance) — теорема о том,
 что для распределенных вычислений невозможно обеспечить все три свойства: 
согласованность данных, доступность и устойчивость к разделению.

Термин CAP, относящийся к проектированию распределенных систем, также называется теоремой Брюера. 
Теорема утверждает, что распределенное хранилище данных не может одновременно обеспечить более 
двух из трех изображенных на схеме свойств:


2. Акроним требований ACID
ACID (Atomicity, Consistency, Isolation, Durability) — 
описание требований к СУБД, системе управления базами данных: 
атомарность, согласованность, изолированность и прочность.

Тем не менее, NoSQL-хранилища в состоянии справиться с транзакциями, 
однако придется самостоятельно написать дополнительную 
логику управления транзакциями в отдельном приложении.

Некоторые базы данных NoSQL, такие как Neo4j и MarkLogic, 
обеспечивают свойства ACID. Однако они все равно не так надежны, как реляционные базы данных.



Ключ-значение:

1. Базовай тип СУБД, первичные ключи
пооерживают почти всеми
2. Нетрудно написать свою под конкретную задачу(если необходимо)
3. Потенциал развития:
	* оптимизация скорости доступа к данным
	* оптимизация дискового пространства
	* дополнительные структуры данных
	* комбинирование с другими типами данных


Документоориентированные СУБД:
1. Слабоструктурированные данные
2. Для хранения того, что в реальном мире похоже на документ


Колоночные СУБД:
1. Одна огромная разряженная таблица
2. OLAP для больших данных  - аналитические OLAP операции на больших данных
3. Not only SQL: поддерживает запросы на SQL, но очень далек от стандарта


