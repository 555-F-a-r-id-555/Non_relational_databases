Классы задач NoSQL:
1. Дополнение к РСУБД для решения
конкретных задач
(кэширование, Data lake)
2. Основная СУБД, если задача не стоит
решать с помошью РСУБД
3. КОмбинация разных NoSQL СУБД
для решения частных задач


1.--------------------------------------------------------------------------------------
NoSQL для дополнительных БД.
Кэшеривование ключ-значение для быстрого доступа к вычислениеям, сделанным ранее
- Вычисляем запрос(напр. топ 10 новостей за день по просмотрам), 
перемещаем результаты в кэш, извлекаем без обращения к основному 
хранилищу
- Пример: Memcached, Redis

Неопределенный набор признаков объектов
- Сырые данные храняться в NoSQL,
структурные(извлеченная информация) - в РСУБД
- Пример: MongoDB, Cassandra

Графы: поиск друзей второго круга, общих интересов
- Решение с помощью РСУБД слишком медленно и сложно
- Привер: Neo4j

2.----------------------------------------------------------------------------------
NoSQL как основная БД
- Слабоструктурированные данные для анализа:
документы,объекты наблюдения, логи событий
- Документооринтированные и колонычные СУБД
 часто предлагают возможность индексировать по атрибутам
- Привер: MongoDB

- Высокочастотные операции с данными: биржа, чаты, онлайн-игры
- Данные часто меняются и нет смысла записывать их на диск
- Пример: Redis
3.---------------------------------------------------------------------------------------
Комбинация NoSql для часных задач
- 1.Колоночные СУБД для аналитики, глобального поиска
К числу популярных колоночных СУБД относятся ClickHouse, Vertica, Cassandra, Google BigQuery
Колоночные базы данных (СУБД) – это тип баз данных, где данные хранятся по столбцам, а не по строкам. 
К числу популярных колоночных СУБД относятся ClickHouse, Vertica, Cassandra, Google BigQuery. 
Они отличаются от реляционных баз данных тем, что при чтении данных нужно обращаться только к нужным столбцам, а не ко всей строке. 
Это делает их более эффективными для аналитических задач и больших объемов данных. 

- 2.Ключ-значение для кэширования
Redis, Memcached, DynamoDB
База данных "ключ-значение" (key-value database) — это тип нереляционной базы данных, которая хранит данные в виде пар "ключ-значение". 
Ключ является уникальным идентификатором, а значение — это данные, связанные с этим ключом. 
Такой тип баз данных хорошо подходит для быстрого доступа к данным и хранения больших объемов информации. 

- 3.Документооринтированные для объектов данных
MongoDB, Couchbase и Firebase Realtime Database
Документо-ориентированные базы данных, такие как MongoDB, Couchbase и Firebase Realtime Database, 
хранят данные в виде документов, например, в формате JSON, а не в таблицах. 
Эти базы данных хорошо подходят для хранения неструктурированных данных и веб-приложений.
 
- 4.Графовые для связи объектов
Графовые базы данных (Graph databases) — это тип нереляционных баз данных (NoSQL), 
которые хранят данные в виде графов, где узлы (вершины) представляют сущности, а ребра — отношения между ними. 
Это позволяет эффективно обрабатывать данные с большими и сложными взаимосвязями, 
что делает их полезными для различных приложений, таких как социальные сети, системы рекомендаций и анализ данных.

Neo4j:
Одна из самых популярных и широко используемых графовых баз данных. 
Она поддерживает модель ориентированного графа и предлагает мощные возможности для работы с данными.  

SparkSee:
Графовая база данных, которая разработана для работы с большими данными. 

Sqrrl:
Графовая база данных, которая предоставляет возможности для работы с пространственными данными. 

Titan:
Графовая база данных, которая предназначена для больших графов и высокой нагрузки. 

InfoGrid:
Графовая база данных, которая ориентирована на хранение и обработку геопространственных данных. 

HyperGraphDB:
Графовая база данных, которая использует модель мультиграфа. 

Amazon Neptune:
Областная графовая база данных от Amazon, предназначенная для масштабируемых и высоконагруженных систем. 
Она поддерживает различные языки запросов, такие как SPARQL и Gremlin. 

ArangoDB:
Мультимодельная база данных, которая также поддерживает графовую модель. 
Она предлагает гибкость в выборе модели данных и может быть использована в различных сценариях. 

OrientDB:
Ещё одна мультимодельная база данных, которая поддерживает графовые и реляционные данные

----------------------------------------------------------------------------------------------------------------------------------